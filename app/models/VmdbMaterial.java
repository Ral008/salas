package models;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import play.db.jpa.GenericModel;
import flexjson.JSONSerializer;

/**
 * VmdbPersona generated by hbm2java
 */
@Entity
@Table(name = "STDB_MATERIAL")
public class VmdbMaterial extends GenericModel {
	
	@Id
	@GeneratedValue(generator="SEQ_MATERIAL", strategy=GenerationType.SEQUENCE)
	@SequenceGenerator(name="SEQ_MATERIAL", sequenceName="SEQ_MATERIAL", allocationSize=1)
	@Column(name = "CO_MATERIAL")
	private Long coMaterial;
	
	@Column(name = "DE_NOMBRE", nullable = false, length = 100)
	private String deNombre;
	
	@Column(name = "ST_MATERIAL", nullable = false, length = 1)
	private Character stMaterial;
	
	@Column(name = "CO_USUARIO_CREACION", nullable = false, length = 50)
	private String coUsuarioCreacion;
	
	@Column(name = "CO_USUARIO_MODIFICACION", length = 50)
	private String coUsuarioModificacion;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DA_FECHA_CREACION", nullable = false, length = 23)
	private Date daFechaCreacion;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DA_FECHA_MODIFICACION", length = 23)
	private Date daFechaModificacion;		
	
	public VmdbMaterial() {
	}    
	
	public Long getCoMaterial() {
		return coMaterial;
	}

	public void setCoMaterial(Long coMaterial) {
		this.coMaterial = coMaterial;
	}

	public String getDeNombre() {
		return deNombre;
	}

	public void setDeNombre(String deNombre) {
		this.deNombre = deNombre;
	}

	public Character getStMaterial() {
		return stMaterial;
	}

	public void setStMaterial(Character stMaterial) {
		this.stMaterial = stMaterial;
	}

	public String getCoUsuarioCreacion() {
		return coUsuarioCreacion;
	}

	public void setCoUsuarioCreacion(String coUsuarioCreacion) {
		this.coUsuarioCreacion = coUsuarioCreacion;
	}

	public String getCoUsuarioModificacion() {
		return coUsuarioModificacion;
	}

	public void setCoUsuarioModificacion(String coUsuarioModificacion) {
		this.coUsuarioModificacion = coUsuarioModificacion;
	}

	public Date getDaFechaCreacion() {
		return daFechaCreacion;
	}

	public void setDaFechaCreacion(Date daFechaCreacion) {
		this.daFechaCreacion = daFechaCreacion;
	}

	public Date getDaFechaModificacion() {
		return daFechaModificacion;
	}

	public void setDaFechaModificacion(Date daFechaModificacion) {
		this.daFechaModificacion = daFechaModificacion;
	}

	public static List<VmdbMaterial> listMaterial(String nombre) {
    	List<VmdbMaterial> list = VmdbMaterial.find("UPPER(deNombre) like ? and stMaterial = ?  order by deNombre asc", "%"+nombre.toUpperCase()+"%",'1').fetch();
        return list;
    }
	
	public static String eliminar(Long id, String usuario) {
		Map result = new HashMap();
		VmdbMaterial material = VmdbMaterial.findById(id);
		if(material != null){
			material.setStMaterial('0');
			material.setCoUsuarioModificacion(usuario);
			material.setDaFechaModificacion(new Date());
			material.save();
			result.put("status",1);
			result.put("message","El material fue eliminado correctamente!");
		}else{
			result.put("status",0);
			result.put("message","No se puede eliminar");
		}
		JSONSerializer mapeo = new JSONSerializer();		
		return mapeo.serialize(result);
	}
	
	public static Map guardarMaterial(VmdbMaterial material, String usuario) {
		Map result = new HashMap();
		result.put("status", 0);
		result.put("message", "Error on Server");
		if(material.getCoMaterial() == null){
			List<VmdbMaterial> list = VmdbMaterial.find("UPPER(deNombre) = ? and stMaterial = ?",material.getDeNombre().toString().toUpperCase(),'1').fetch();
			if(list.size()>0){
				result.put("status", 3);
				result.put("message", "El material ya esta registrado");
			}else{
				material.setCoUsuarioCreacion(usuario);
				material.setDaFechaCreacion(new Date());
				material.save();
				result.put("status", 1);
				result.put("message", "El material fue guardado correctamente");
			}			
		}else{
			material.setCoUsuarioModificacion(usuario);
			material.setDaFechaModificacion(new Date());
			material.save();
			result.put("status", 2);
			result.put("message", "El material fue actualizado correctamente");
		}		
		return result;
	}
	
}
