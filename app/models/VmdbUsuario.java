package models;

import play.*;
import play.db.DB;
import play.db.jpa.*;
import service.ServiceUsuarios;
import util.DateUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * VmdbUsuario generated by hbm2java
 */
@Entity
@Table(name = "STDB_USUARIO")
public class VmdbUsuario extends GenericModel {

	@Id
	@GeneratedValue(generator="SEQ_USUARIO", strategy=GenerationType.SEQUENCE)
	@SequenceGenerator(name="SEQ_USUARIO", sequenceName="SEQ_USUARIO", allocationSize=1)
	@Column(name = "CO_USUARIO")
	private Long coUsuario;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CO_PERSONA", nullable = false)
	private VmdbPersona vmdbPersona;
	@Column(name = "CO_USUARIO_CREACION", nullable = false, length = 50)
	private String coUsuarioCreacion;
	@Column(name = "CO_USUARIO_MODIFICACION", length = 50)
	private String coUsuarioModificacion;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DA_FECHA_CREACION", nullable = false, length = 23)
	private Date daFechaCreacion;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DA_FECHA_MODIFICACION", length = 23)
	private Date daFechaModificacion;
	@Column(name = "DE_USUARIO", nullable = false, length = 50)
	private String deUsuario;
	@Column(name = "DE_CLAVE", nullable = false)
	private String deClave;
	@Column(name = "ST_USUARIO", nullable = false, length = 1)
	private Character stUsuario;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vmdbUsuario",cascade=CascadeType.ALL)
	private Set<VmdrUsuarioRol> vmdrUsuarioRols = new HashSet<VmdrUsuarioRol>(0);

	public VmdbUsuario() {
	}

	public VmdbUsuario(Long coUsuario, VmdbPersona vmdbPersona,
			String coUsuarioCreacion, Date daFechaCreacion,
			String deUsuario, String deClave, Character stUsuario) {
		this.coUsuario = coUsuario;
		this.vmdbPersona = vmdbPersona;
		this.coUsuarioCreacion = coUsuarioCreacion;
		this.daFechaCreacion = daFechaCreacion;
		this.deUsuario = deUsuario;
		this.deClave = deClave;
		this.stUsuario = stUsuario;
	}

	public VmdbUsuario(Long coUsuario, VmdbPersona vmdbPersona,
			String coUsuarioCreacion, String coUsuarioModificacion,
			Date daFechaCreacion, Date daFechaModificacion,
			String deUsuario, String deClave, Character stUsuario,
			Set<VmdrUsuarioRol> vmdrUsuarioRols) {
		this.coUsuario = coUsuario;
		this.vmdbPersona = vmdbPersona;
		this.coUsuarioCreacion = coUsuarioCreacion;
		this.coUsuarioModificacion = coUsuarioModificacion;
		this.daFechaCreacion = daFechaCreacion;
		this.daFechaModificacion = daFechaModificacion;
		this.deUsuario = deUsuario;
		this.deClave = deClave;
		this.stUsuario = stUsuario;
		this.vmdrUsuarioRols = vmdrUsuarioRols;
	}

	public Long getCoUsuario() {
		return coUsuario;
	}

	public void setCoUsuario(Long coUsuario) {
		this.coUsuario = coUsuario;
	}

	public VmdbPersona getVmdbPersona() {
		return vmdbPersona;
	}

	public void setVmdbPersona(VmdbPersona vmdbPersona) {
		this.vmdbPersona = vmdbPersona;
	}

	public String getCoUsuarioCreacion() {
		return coUsuarioCreacion;
	}

	public void setCoUsuarioCreacion(String coUsuarioCreacion) {
		this.coUsuarioCreacion = coUsuarioCreacion;
	}

	public String getCoUsuarioModificacion() {
		return coUsuarioModificacion;
	}

	public void setCoUsuarioModificacion(String coUsuarioModificacion) {
		this.coUsuarioModificacion = coUsuarioModificacion;
	}

	public Date getDaFechaCreacion() {
		return daFechaCreacion;
	}

	public void setDaFechaCreacion(Date daFechaCreacion) {
		this.daFechaCreacion = daFechaCreacion;
	}

	public Date getDaFechaModificacion() {
		return daFechaModificacion;
	}

	public void setDaFechaModificacion(Date daFechaModificacion) {
		this.daFechaModificacion = daFechaModificacion;
	}

	public String getDeUsuario() {
		return deUsuario;
	}

	public void setDeUsuario(String deUsuario) {
		this.deUsuario = deUsuario;
	}

	public String getDeClave() {
		return deClave;
	}

	public void setDeClave(String deClave) {
		this.deClave = deClave;
	}

	public Character getStUsuario() {
		return stUsuario;
	}

	public void setStUsuario(Character stUsuario) {
		this.stUsuario = stUsuario;
	}

	public Set<VmdrUsuarioRol> getVmdrUsuarioRols() {
		return vmdrUsuarioRols;
	}

	public void setVmdrUsuarioRols(Set<VmdrUsuarioRol> vmdrUsuarioRols) {
		this.vmdrUsuarioRols = vmdrUsuarioRols;
	}
	
	public static List<VmdbUsuario> findUsuariosByName(String username){
		List<VmdbUsuario> user = VmdbUsuario.find("UPPER(deUsuario) like ? ", "%"+username.toUpperCase()+"%").fetch();
		return user;
	}
	public static VmdbUsuario findUsuarioByName(String username){
		return  VmdbUsuario.find("deUsuario like ? ", "%"+username+"%").first();		
	}

	public static List<VmdbUsuario> findUsuariosByRol(String rol) {
		String sql = "SELECT u FROM VmdrUsuarioRol ur JOIN ur.vmdbUsuario u JOIN ur.vmdbRol r WHERE r.deNombre like ? ";
    	List<VmdbUsuario> list = VmdbUsuario.find(sql,"%"+rol+"%").fetch();
    	return list;
	}

	public static VmdbUsuario saveUser(VmdbUsuario user) {
		return user.save();

	}

	public static List<Object> validarLogin(String user,String pass){
		List<Object> lista = new ArrayList<Object>();
		VmdbUsuario vmdbusuario = ServiceUsuarios.findUsuarioByUserName(user);
		if(vmdbusuario != null && vmdbusuario.getDeClave().equals(pass)){
			Map obj = new HashMap();
			obj.put("CO_PERSONA", vmdbusuario.getVmdbPersona().getCoPersona());
			obj.put("DE_USUARIO", vmdbusuario.getDeUsuario());
			obj.put("DE_NOMBRE", vmdbusuario.getVmdbPersona().getDeNombre());
			obj.put("DE_MAIL", vmdbusuario.getVmdbPersona().getDeCorreo());
			lista.add(obj);	
		}
		return lista;
	}
}
