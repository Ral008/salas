package models;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import flexjson.JSONSerializer;

import play.db.jpa.GenericModel;

/**
 * VmdbPersona generated by hbm2java
 */
@Entity
@Table(name = "STDD_DETALLE_SALA")
public class VmdbDetalleSala extends GenericModel {
	
	@Id
	@GeneratedValue(generator="SEQ_DETALLE_SALA", strategy=GenerationType.SEQUENCE)
	@SequenceGenerator(name="SEQ_DETALLE_SALA", sequenceName="SEQ_DETALLE_SALA", allocationSize=1)
	@Column(name = "CO_DETALLE_SALA")
	private Long coDetalleSala;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CO_SALA", nullable = false)
	private VmdbSala vmdbSala;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CO_MATERIAL", nullable = false)
	private VmdbMaterial vmdbMaterial;
	
	@Column(name = "ST_DETALLE_SALA", nullable = false, length = 1)
	private Character stDetalleSala;
	
	@Column(name = "CO_USUARIO_CREACION", nullable = false, length = 50)
	private String coUsuarioCreacion;
	
	@Column(name = "CO_USUARIO_MODIFICACION", length = 50)
	private String coUsuarioModificacion;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DA_FECHA_CREACION", nullable = false, length = 23)
	private Date daFechaCreacion;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DA_FECHA_MODIFICACION", length = 23)
	private Date daFechaModificacion;	
	
	public VmdbDetalleSala() {
	}
	
	public Long getCoDetalleSala() {
		return coDetalleSala;
	}

	public void setCoDetalleSala(Long coDetalleSala) {
		this.coDetalleSala = coDetalleSala;
	}

	public VmdbSala getVmdbSala() {
		return vmdbSala;
	}

	public void setVmdbSala(VmdbSala vmdbSala) {
		this.vmdbSala = vmdbSala;
	}

	public VmdbMaterial getVmdbMaterial() {
		return vmdbMaterial;
	}

	public void setVmdbMaterial(VmdbMaterial vmdbMaterial) {
		this.vmdbMaterial = vmdbMaterial;
	}

	public Character getStDetalleSala() {
		return stDetalleSala;
	}

	public void setStDetalleSala(Character stDetalleSala) {
		this.stDetalleSala = stDetalleSala;
	}

	public String getCoUsuarioCreacion() {
		return coUsuarioCreacion;
	}

	public void setCoUsuarioCreacion(String coUsuarioCreacion) {
		this.coUsuarioCreacion = coUsuarioCreacion;
	}

	public String getCoUsuarioModificacion() {
		return coUsuarioModificacion;
	}

	public void setCoUsuarioModificacion(String coUsuarioModificacion) {
		this.coUsuarioModificacion = coUsuarioModificacion;
	}

	public Date getDaFechaCreacion() {
		return daFechaCreacion;
	}

	public void setDaFechaCreacion(Date daFechaCreacion) {
		this.daFechaCreacion = daFechaCreacion;
	}

	public Date getDaFechaModificacion() {
		return daFechaModificacion;
	}

	public void setDaFechaModificacion(Date daFechaModificacion) {
		this.daFechaModificacion = daFechaModificacion;
	}

	public static String eliminarMaterialDeLaSalaById(Long id, String usuario) {
		Map result = new HashMap();
		VmdbDetalleSala detalleSala = VmdbDetalleSala.findById(id);
		if(detalleSala != null){
			detalleSala.setStDetalleSala('0');
			detalleSala.setCoUsuarioModificacion(usuario);
			detalleSala.setDaFechaModificacion(new Date());
			detalleSala.save();
			result.put("status",1);
			result.put("message","El material fue eliminado correctamente!");
		}else{
			result.put("status",0);
			result.put("message","No puede ser eliminado");
		}
		JSONSerializer mapeo = new JSONSerializer();		
		return mapeo.serialize(result);
	}
	
}
